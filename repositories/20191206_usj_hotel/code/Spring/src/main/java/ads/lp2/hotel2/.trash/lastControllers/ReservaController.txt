package ads.lp2.hotel2.model.reserva;

import java.util.Date;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.servlet.ModelAndView;
import org.springframework.web.servlet.view.RedirectView;

@Controller
@RequestMapping("/reservas")
public class ReservaController {

    @Autowired
    private ReservaRepository reservaRepository;

    @PostMapping(path = "/create")
    public @ResponseBody RedirectView createReserva(@RequestParam Date dataDia, @RequestParam double preco,
            @RequestParam Long id_hospede, @RequestParam Long id_quarto) {
        reservaRepository.save((new Reserva(dataDia, preco, id_hospede, id_quarto)));

        System.out.println("--=> create: " + new Reserva(dataDia, preco, id_hospede, id_quarto));

        return new RedirectView("index");
    }

    @PostMapping(path = "/read")
    public @ResponseBody RedirectView readReserva(Model model, @RequestParam Long id) {
        model.addAttribute("reserva", reservaRepository.findById(id));

        System.out.println("--=> read: " + model.getAttribute("reserva"));

        return new RedirectView("index");
    }

    @PostMapping(path = "/update") // used just to set true
    public @ResponseBody RedirectView updateReserva(@RequestParam boolean finalizacao, @RequestParam Long id) {
        Reserva reserva = reservaRepository.findById(id).get();
        reserva.setFinalizacao(finalizacao);
        reservaRepository.save(reserva);

        System.out.println("--=> update: " + reserva);

        return new RedirectView("index");
    }

    @PostMapping(path = "/delete")
    public @ResponseBody RedirectView deleteReserva(Long id) {
        Reserva reserva = reservaRepository.findById(id).get();
        reservaRepository.delete(reserva);

        System.out.println("--=> delete: " + reserva);

        return new RedirectView("index");
    }

    @PostMapping(path = "/all")
    public @ResponseBody RedirectView Reservas(Model model) {
        model.addAttribute("reservas", reservaRepository.findAll());

        System.out.println("--=> all: " + model.getAttribute("reservas"));

        return new RedirectView("index");

    }

    // @PostMapping(path = "/allThisDay") // byDataDia
    // public @ResponseBody Model allThisByDay(Model model, @RequestParam Date
    // dataDia) {
    // model.addAttribute("reservas", reservaRepository.findAllByDataDia(dataDia));
    // return model;
    // }

}
